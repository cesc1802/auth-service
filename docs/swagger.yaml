definitions:
  common.AppError:
    properties:
      error_key:
        type: string
      log:
        type: string
      message:
        type: string
      status_code:
        type: integer
      ve:
        items:
          $ref: '#/definitions/common.ValidationErrorField'
        type: array
    type: object
  common.ValidationErrorField:
    properties:
      errorMessage:
        type: string
      field:
        type: string
      tag:
        type: string
    type: object
  dto.AssignRolesToUserRequest:
    properties:
      roles:
        items:
          properties:
            id:
              type: integer
          type: object
        type: array
      user_id:
        type: integer
    type: object
  dto.CreatePermissionRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.CreateRolePermissionRequest:
    properties:
      permissions:
        items:
          properties:
            id:
              type: integer
          type: object
        type: array
      role_id:
        type: integer
    type: object
  dto.CreateRoleRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.RemoveRolesRequest:
    properties:
      roles:
        items:
          properties:
            id:
              type: integer
          type: object
        type: array
      user_id:
        type: integer
    type: object
  dto.UpdatePermissionRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.UpdateRoleRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
info:
  contact:
    email: thuocnv1802@gmail.com
    name: Cesc Nguyen
  description: This is Auth Service API.
  title: Auth Service API
  version: "1.0"
paths:
  /api/v1/permissions:
    get:
      consumes:
      - application/json
      description: List Permission
      parameters:
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: Permission name
        in: query
        name: name
        type: string
      - description: Permission description
        in: query
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: List Permission
      tags:
      - Permissions
    post:
      consumes:
      - application/json
      description: Create Permission
      parameters:
      - description: Create Permission
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Create Permission
      tags:
      - Permissions
  /api/v1/permissions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Permission
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Delete Permission
      tags:
      - Permissions
    put:
      consumes:
      - application/json
      description: Update Permission
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update Permission
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Update Permission
      tags:
      - Permissions
  /api/v1/role_permissions:
    post:
      consumes:
      - application/json
      description: Create Batch Role Permission
      parameters:
      - description: Create Permission
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRolePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Create Batch Role Permission
      tags:
      - Role Permissions
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: List Role
      parameters:
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: role name
        in: query
        name: name
        type: string
      - description: role description
        in: query
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: List Role
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Create Role
      parameters:
      - description: Create Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Create Role
      tags:
      - Roles
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Role
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Delete Role
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: Update Role
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Update Role
      tags:
      - Roles
  /api/v1/user_roles:
    delete:
      consumes:
      - application/json
      description: Remove Roles From User
      parameters:
      - description: Remove Roles From User
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/dto.RemoveRolesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Remove Roles From User
      tags:
      - User Roles
    post:
      consumes:
      - application/json
      description: Assign Roles To User
      parameters:
      - description: Assign Roles to User
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/dto.AssignRolesToUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Assign Roles To User
      tags:
      - User Roles
  /api/v1/user_roles/{user_id}:
    get:
      consumes:
      - application/json
      description: Get Roles By User ID
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Get Roles By User ID
      tags:
      - User Roles
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
